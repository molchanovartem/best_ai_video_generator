import { InlineKeyboard } from "grammy";
import { User } from "../models/User.js";
import { MyContext } from "../types.js";
import { getModelName } from "../utils/getModelName.js";
import { getModelDescription } from "../utils/getModelDescription.js";

export const start = async (ctx: MyContext) => {
  if (!ctx.from) {
    return ctx.reply('User info is not available.');
  }

  const { id, username, first_name } = ctx.from;

  try {
    const keybosard = new InlineKeyboard().text('–ú–µ–Ω—é', 'menu');
    let user = await User.findOne({ telegramId: id });

    if (!user) {
      user = new User({
        telegramId: id,
        firstName: first_name || 'Unknown',
        username: username || 'Unknown',
      });
      await user.save();
      console.log(`New user created: ${user.telegramId}`);
    }
    // const modelName = getModelName(process.env.MODEL_NAME);
    const modelDescription = getModelDescription(process.env.MODEL_NAME, user.balanceSilent);

    const welcomeText = modelDescription;

    return ctx.reply(welcomeText, {
      reply_markup: keybosard,
    });
  } catch (error) {
    console.error('Error while processing /start command:', error);
    return ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
  }
}

// TODO: –∫–æ–≥–¥–∞ —Å–¥–µ–ª–∞—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é —Å–∏—Å—Ç–µ–º—É

// const welcomeText = `üé¨ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ${modelName} Bot!

// –°–æ–∑–¥–∞–≤–∞–π—Ç–µ —Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ –≤–∏–¥–µ–æ c –æ–∑–≤—É—á–∫–æ–π –≤ ${modelName} –æ—Ç Google DeepMind!

// ‚ú® *–ß—Ç–æ —É–º–µ–µ—Ç ${modelName}:*
// ‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
// ‚Ä¢ –†–µ–∞–ª–∏—Å—Ç–∏—á–Ω—ã–µ —Ñ–∏–∑–∏–∫–∞, —Å—Ü–µ–Ω—ã, –ø–µ—Ä—Å–æ–Ω–∞–∂–∏
// ‚Ä¢ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è –æ–∑–≤—É—á–∫–∞ –∏ –∞—É–¥–∏–æ —ç—Ñ—Ñ–µ–∫—Ç—ã

// üéØ –ù–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!

// üíé *–í–∞—à –±–∞–ª–∞–Ω—Å:*
// üîä –í–∏–¥–µ–æ —Å –æ–∑–≤—É—á–∫–æ–π: ${user.balance_voiced}
// üîá –í–∏–¥–µ–æ –±–µ–∑ –æ–∑–≤—É—á–∫–∏: ${user.balance_silent}
// –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: ${user.invited_friends}
// üí∞ –í–∞—à —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥: ${user.referralCode}`;