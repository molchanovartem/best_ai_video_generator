import { fal } from '@fal-ai/client';
import { User } from '../models/User.js';
import { InlineKeyboard } from 'grammy';
import { menuKeyboard } from "../keyboards/index.js";
import 'dotenv/config';

// --- –õ–æ–≥–∏–∫–∞ –¥–∏–∞–ª–æ–≥–∞ ---
export async function generateConversation(conversation: any, ctx: any) {
  // 1. –ü—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –±–∞–ª–∞–Ω—Å–∞
  let user = await User.findOne({ telegramId: ctx.from?.id });

  if (!user) {
    await ctx.editMessageText('–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start', {
      reply_markup: new InlineKeyboard().text('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'backToMenu')
    });
    return;
  }

  if (user.balanceSilent < 1) {
    await ctx.editMessageText('–£ –≤–∞—Å –Ω–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–π. –ö—É–ø–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ', {
      reply_markup: new InlineKeyboard().text('üõçÔ∏è –¢–æ–≤–∞—Ä—ã', 'products')
    });
    return;
  }

  // 2. –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–æ–º–ø—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  await ctx.reply("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ–æ? –í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –ø–æ–¥–ø–∏—Å—å—é.", {
    reply_markup: new InlineKeyboard().text('–û—Ç–º–µ–Ω–∞', 'EXITbackToMenu')
  });

  // 3. –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê race(): –ò—Å–ø–æ–ª—å–∑—É–µ–º wait() –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
  const replyCtx = await conversation.wait();

  // 4. –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let userPrompt: string | undefined;
  let imageUrl: string | undefined;

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É
  if (replyCtx.callbackQuery?.data === 'EXITbackToMenu') {
      await replyCtx.answerCallbackQuery({ text: '–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞.' });
      await replyCtx.editMessageText('–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.', { reply_markup: menuKeyboard });
      return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ñ–æ—Ç–æ
  if (replyCtx.message?.photo) {
      userPrompt = replyCtx.message.caption || ''; // –ë–µ—Ä–µ–º –ø–æ–¥–ø–∏—Å—å –∫ —Ñ–æ—Ç–æ

      const photo = replyCtx.message.photo.pop();
      if (photo) {
        const file = await replyCtx.api.getFile(photo.file_id);
        const filePath = file.file_path;

        if (filePath) {
          const fileUrl = `https://api.telegram.org/file/bot${process.env.BOT_TOKEN}/${filePath}`;
          await replyCtx.reply('–§–æ—Ç–æ –ø–æ–ª—É—á–µ–Ω–æ, –∑–∞–≥—Ä—É–∂–∞—é –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä...');
          const response = await fetch(fileUrl);
          const blob = await response.blob();
          imageUrl = await conversation.external(() => fal.storage.upload(blob));
          console.log('File uploaded to fal.storage:', imageUrl);
        }
      }

      // –ï—Å–ª–∏ —É —Ñ–æ—Ç–æ –Ω–µ –±—ã–ª–æ –ø–æ–¥–ø–∏—Å–∏, –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
      if (!userPrompt) {
        await replyCtx.reply("–û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç, –æ–ø–∏—Å—ã–≤–∞—é—â–∏–π, —á—Ç–æ –¥–æ–ª–∂–Ω–æ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç—å –Ω–∞ –≤–∏–¥–µ–æ.");
        // –ñ–¥–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const textCtx = await conversation.waitFor('message:text');
        userPrompt = textCtx.message.text;
      }

  } // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–ø—Ä–∞–≤–∏–ª —Ç–µ–∫—Å—Ç
  else if (replyCtx.message?.text) {
      userPrompt = replyCtx.message.text;
  }

  // –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –Ω–∏ —Ç–µ–∫—Å—Ç, –Ω–∏ —Ñ–æ—Ç–æ, –Ω–∏ –∫–æ–ª–±—ç–∫
  if (!userPrompt) {
      await ctx.reply("–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å –≤–∞—à –≤–≤–æ–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, –æ—Ç–ø—Ä–∞–≤–∏–≤ —Ç–µ–∫—Å—Ç –∏–ª–∏ —Ñ–æ—Ç–æ.", { reply_markup: menuKeyboard });
      return;
  }

  // 5. –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
  await replyCtx.reply(`–ü—Ä–∏–Ω—è–ª! –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É: "${userPrompt}". –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...`);

  user.balanceSilent -= 1;
  await user.save();

  try {
    await replyCtx.replyWithChatAction("upload_video");

    const videoUrl = await conversation.external(() => generateVideoFile(userPrompt, imageUrl));

    await replyCtx.replyWithVideo(videoUrl, {
        supports_streaming: true,
    });

    await replyCtx.reply('–í–∞—à–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!\n–°–æ–∑–¥–∞–¥–∏–º –µ—â–µ –æ–¥–Ω–æ?', {
      reply_markup: menuKeyboard
    });
  } catch (error) {
    user.balanceSilent += 1;
    await user.save();
    console.error(`(ID —á–∞—Ç–∞: ${ctx.from?.id}) –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ:`, error);

    await replyCtx.reply('‚ùå –£–ø—Å! –í–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–º—Ç –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ. \n\n–ú—ã –≤–µ—Ä–Ω—É–ª–∏ 1 –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.', {
      reply_markup: menuKeyboard
    });
  }
}
// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
async function generateVideoFile(prompt: string, imageUrl?: string): Promise<string> {
    try {
        console.log(`[GENERATION] –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞: "${prompt}"${imageUrl ? ' —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º' : ''}`);

        const input: { prompt: string; image_url?: string } = { prompt };
        if (imageUrl) input.image_url = imageUrl;

        const model = imageUrl ? 'fal-ai/pixverse/v4.5/image-to-video' : 'fal-ai/pixverse/v4.5/text-to-video';

        const result: any = await fal.run(model, { input });

        if (!result?.data?.video?.url) {
          console.error("–ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç fal.ai:", result);
          throw new Error("API –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–µ—Ä–Ω—É–ª–æ –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö.");
        }

        const videoUrl = result.data.video.url;
        console.log(`[GENERATION] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –§–∞–π–ª: ${videoUrl}`);
        return videoUrl;
    } catch (error) {
        console.error(`[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: ${error}`);
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
}
