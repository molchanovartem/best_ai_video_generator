import { fal } from '@fal-ai/client'
import { User } from '../models/User.js';
import { InlineKeyboard } from 'grammy';
import { menuKeyboard } from "../keyboards/index.js";

// const EXIT_COMMANDS = ['–æ—Ç–º–µ–Ω–∞', '–Ω–∞–∑–∞–¥', '–æ—Ç–º–µ–Ω–∏—Ç—å', 'cancel', 'exit'];

// --- –õ–æ–≥–∏–∫–∞ –¥–∏–∞–ª–æ–≥–∞ ---
export async function generateConversation(conversation: any, ctx: any) {
  // 1. –°–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –æ–Ω —Ö–æ—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å
  await ctx.reply("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –≤–∏–¥–µ—Ç—å –Ω–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –≤–∏–¥–µ–æ?", {
    reply_markup: new InlineKeyboard().text('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'EXITbackToMenu')
  });

  // 2. –ñ–¥—ë–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (—Å–ª–µ–¥—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–µ–≥–æ)
  const promptCtx = await conversation.wait();


  if (promptCtx?.update?.callback_query?.data === 'EXITbackToMenu') {
    await ctx.reply(`
      ‚ú® –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é!
  –û—Ç—Å—é–¥–∞ –≤—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤ üõçÔ∏è –∏–ª–∏ –æ—Ç–∫—Ä—ã—Ç—å —Å–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å üë§.
  –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ ‚¨áÔ∏è
  `, {
    reply_markup: menuKeyboard
  });
    return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞
  }
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏—Å–ª–∞–ª –∏–º–µ–Ω–Ω–æ —Ç–µ–∫—Å—Ç
  if (!promptCtx.message?.text) {
    await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç.");
    return; // –í—ã—Ö–æ–¥–∏–º –∏–∑ –¥–∏–∞–ª–æ–≥–∞
  }
  
  const userPrompt = promptCtx.message.text;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —Ö–æ—á–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–π—Ç–∏
  // if (EXIT_COMMANDS.includes(userPrompt.toLowerCase())) {
  //   await ctx.reply("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞. –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", {
  //     reply_markup: menuKeyboard
  //   });
  //   return;
  // }

  await ctx.reply(`–ü—Ä–∏–Ω—è–ª! –ù–∞—á–∏–Ω–∞—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –≤–∏–¥–µ–æ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É: "${userPrompt}". –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...`);
  let user = await User.findOne({ telegramId: ctx.from?.id });

  if (!user) {
    return ctx.callbackQuery.message?.editText('–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –∑–∞–Ω–æ–≤–æ –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É /start', {
      reply_markup: new InlineKeyboard().text('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é', 'backToMenu')
    });
  }

  if (user.balanceSilent < 1) {
    return ctx.callbackQuery.message?.editText('–£ –≤–∞—Å –Ω–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ü–∏–π. –ö—É–ø–∏—Ç—å –∏—Ö –º–æ–∂–Ω–æ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ', {
      reply_markup: new InlineKeyboard().text('üõçÔ∏è –¢–æ–≤–∞—Ä—ã', 'products')
    });
  }

  user.balanceSilent -= 1;
  await user.save();

  try {
    await ctx.replyWithChatAction("upload_video");

    // const videoUrl = await conversation.external(() => generateVideoFile(userPrompt));
    const videoUrl = 'https://v3.fal.media/files/lion/NfyXdCFBvAzRsMe2R1Fb8_output.mp4'
    await ctx.replyWithVideo(videoUrl, {
        supports_streaming: true,
    });

    await ctx.reply('–¢–≤–æ–µ –≤–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ!\n–°–æ–∑–¥–∞–¥–∏–º –µ—â–µ –æ–¥–Ω–æ?', {
      reply_markup: menuKeyboard
  });
  } catch (error) {
    user.balanceSilent += 1;
    await user.save();
    console.error(`(ID —á–∞—Ç–∞: ${ctx.from?.id}) –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ:`, error);

    await ctx.reply('‚ùå –£–ø—Å! –í–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –ø—Ä–æ–º—Ç –∏–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É –ø–æ–∑–∂–µ. \n\n–ú—ã –≤–µ—Ä–Ω—É–ª–∏ 1 –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –Ω–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å.', {
      reply_markup: menuKeyboard
    });
  }
}

async function generateVideoFile(prompt: string): Promise<string> {
    try {
        console.log(`[GENERATION] –ù–∞—á–∞–ª–æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞: "${prompt}"`);

        const input = {
          prompt: prompt,
          // –í—ã –º–æ–∂–µ—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–æ–¥–µ–ª—å
          // num_inference_steps: 25,
          // seed: 42,
      };
      
      const result = await fal.run('fal-ai/pixverse/v4.5/text-to-video', {
          input: input,
      });
      console.log(result);
      
      const videoUrl = result.data.video.url;
        
      console.log(`[GENERATION] –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –§–∞–π–ª: ${videoUrl}`);
      return videoUrl;
    } catch (error) {
        console.error(`[ERROR] –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ: ${error}`);
        throw new Error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
    }
}